{"version":3,"file":"geometrie.bundle.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNO,MAAM,KAAK;IAGd,YAAY,CAAS,EAAE,CAAS;QAC5B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IACD,mBAAmB,CAAC,KAAY,EAAE,CAAS,EAAE,CAAS;QAClD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QACZ,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,CAAC;IACD,mBAAmB,CAAC,KAAY;QAC5B,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IACD,WAAW,CAAC,OAAgB;QACxB,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IACD,QAAQ,CAAC,MAAa,EAAE,KAAa;QACjC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAE3B,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACtE,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEtE,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACzC,CAAC;IACD,gBAAgB,CAAC,KAAY;QACzB,OAAO,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC;IACD,cAAc,CAAC,CAAS;QACpB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,OAAO,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IACD,QAAQ,CAAC,KAAY;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IACD,UAAU,CAAC,MAAa,EAAC,CAAS;QAC9B,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IACD,eAAe,CAAC,MAAa,EAAE,KAAY;QACvC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IACD,KAAK,CAAC,MAAa,EAAE,MAAa;QAC9B,+EAA+E;QAC/E,IAAI,QAAQ,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACjE,IAAI,QAAQ,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACjE,OAAO,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IACD,mBAAmB,CAAC,CAAQ,EAAE,CAAQ;QAClC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IACD,qBAAqB,CAAC,CAAQ,EAAE,CAAQ;QACpC,wCAAwC;QACxC,IAAI,EAAE,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,EAAE,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAG,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE,CAAC,KAAK,EAAE,GAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;QACvD,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IACD,eAAe,CAAC,CAAQ,EAAE,CAAQ,EAAE,KAAa;QAC7C,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;QAC1B,EAAE,CAAC,4BAA4B,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC;QACxB,CAAC,CAAC,4BAA4B,CAAC,CAAC,EAAC,CAAC,CAAC;QACnC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAC3B,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;QAC1B,EAAE,CAAC,4BAA4B,CAAC,IAAI,EAAC,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC;IAC9B,CAAC;CACJ;AACM,MAAM,OAAO;IAGhB,YAAY,CAAS,EAAE,CAAS;QAC5B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IACD,qBAAqB,CAAC,OAAgB,EAAE,CAAS,EAAE,CAAS;QACxD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;QACd,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAClB,CAAC;IACD,6DAA6D;IAC7D,4BAA4B,CAAC,MAAa,EAAE,MAAa;QACrD,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IACjC,CAAC;IACD,qBAAqB;QACjB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IACD,eAAe,CAAC,OAAgB;QAC5B,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IACD,mBAAmB,CAAC,OAAgB;QAChC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IACD,qBAAqB,CAAC,CAAS;QAC3B,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IACD,eAAe,CAAC,OAAgB;QAC5B,OAAO,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;IACnD,CAAC;IACD,KAAK;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,aAAa;QACT,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACrE,CAAC;IACD,gBAAgB,CAAC,OAAgB;QAC7B,OAAO,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;IACnD,CAAC;IACD,KAAK,CAAC,OAAgB;QAClB,yBAAyB;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;IACrF,CAAC;IACD,UAAU,CAAC,OAAgB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACxD,CAAC;IACD,qBAAqB,CAAC,OAAgB;QAClC,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACzD,CAAC;IACD,QAAQ,CAAC,KAAa;QAClB,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACjI,CAAC;IACD,MAAM;QACF,OAAO,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;CACJ;AACM,MAAM,MAAM;IAGf,YAAY,MAAa,EAAE,KAAa;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,oBAAoB,CAAC,MAAa,EAAE,KAAa;QAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,oBAAoB;QAChB,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IACD,gBAAgB,CAAC,MAAa;QAC1B,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACzG,CAAC;IACD,cAAc,CAAC,MAAc;QACzB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/I,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAChJ,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3F,CAAC;IACD,QAAQ,CAAC,KAAa,EAAE,MAAa;QACjC,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACjP,CAAC;IACD,UAAU,CAAC,MAAa,EAAC,CAAS;QAC9B,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACvI,CAAC;IACD,WAAW,CAAC,OAAgB;QACxB,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACnG,CAAC;CACJ;AACM,MAAM,MAAM;IAIf,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS;QACvC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IACD,qBAAqB,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QACjD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IACD,qBAAqB;QACjB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IACD,mBAAmB;QACf,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,gBAAgB;QACZ,OAAO,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,wBAAwB;QACpB,OAAO,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtI,CAAC;IACD,4BAA4B,CAAC,MAAa,EAAE,MAAa;QACrD,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,CAAC,OAAgB;QACxB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IACD,QAAQ,CAAC,KAAa,EAAE,MAAa;QACjC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9O,CAAC;IACD,gBAAgB,CAAC,MAAa;QAC1B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC;IACD,cAAc,CAAC,CAAS;QACpB,6CAA6C;QAC7C,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAE1C,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAE1C,6CAA6C;QAC7C,IAAI,OAAO,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC;QAC7E,IAAI,OAAO,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC;QAE7E,IAAI,OAAO,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC;QAC7E,IAAI,OAAO,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC;QAE7E,0DAA0D;QAC1D,IAAI,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;QAC/B,IAAI,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;QAC/B,IAAI,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;QAEnD,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IACD,UAAU,CAAC,MAAa,EAAC,CAAS;QAC9B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACxH,CAAC;IACD,eAAe,CAAC,KAAY;QACxB,OAAO,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IACD,SAAS,CAAC,KAAY;QAClB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IACD,YAAY,CAAC,MAAc;QACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1F,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC;CACJ;AACM,MAAM,MAAM;IAEf,YAAY,MAAe;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACD,oBAAoB,CAAC,MAAe;QAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACD,oBAAoB;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACD,QAAQ,CAAC,KAAa,EAAE,MAAa;QACjC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1O;QACD,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IACD,gBAAgB,CAAC,MAAa;QAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5F;QACD,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAc;QACzB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACrJ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACtJ,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9E;QACD,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IACD,UAAU,CAAC,MAAa,EAAC,CAAS;QAC9B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACtH;QACD,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IACD,WAAW,CAAC,OAAgB;QACxB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACtF;QACD,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;CACJ;AACM,MAAM,OAAO;IAGhB,YAAY,MAAa,EAAE,MAAa;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACD,qBAAqB,CAAC,MAAa,EAAE,MAAa;QAC9C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACD,qBAAqB;QACjB,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IACD,WAAW,CAAC,OAAgB;QACxB,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACzJ,CAAC;IACD,QAAQ,CAAC,KAAa,EAAE,MAAa;QACjC,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrb,CAAC;IACD,gBAAgB,CAAC,MAAa;QAC1B,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrK,CAAC;IACD,cAAc,CAAC,MAAc;QACzB,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAChJ,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACjJ,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAChJ,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACjJ,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7I,CAAC;IACD,UAAU,CAAC,MAAa,EAAC,CAAS;QAC9B,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzN,CAAC;IACD,eAAe,CAAC,KAAY;QACxB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,OAAO,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,CAAC,KAAY;QAClB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,OAAO,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IACD,MAAM;QACF,OAAO,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/F,CAAC;IACD,QAAQ;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9G,CAAC;IACD,KAAK;QACD,mEAAmE;QACnE,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxF,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;CACJ;AAEA,MAAc,CAAC,KAAK,GAAG,KAAK,CAAC;AAC7B,MAAc,CAAC,OAAO,GAAG,OAAO,CAAC;AACjC,MAAc,CAAC,MAAM,GAAG,MAAM,CAAC;AAC/B,MAAc,CAAC,MAAM,GAAG,MAAM,CAAC;AAC/B,MAAc,CAAC,MAAM,GAAG,MAAM,CAAC;AAC/B,MAAc,CAAC,OAAO,GAAG,OAAO,CAAC","sources":["webpack://cours/webpack/bootstrap","webpack://cours/webpack/runtime/define property getters","webpack://cours/webpack/runtime/hasOwnProperty shorthand","webpack://cours/webpack/runtime/make namespace object","webpack://cours/./src/ts/geometrie.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Point {\r\n    x: number;\r\n    y: number;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    setCoordonneesPoint(point: Point, x: number, y: number) {\r\n        point.x = x;\r\n        point.y = y;\r\n    }\r\n    getCoordonneesPoint(point: Point) {\r\n        return [point.x, point.y];\r\n    }\r\n    translation(vecteur: Vecteur) {\r\n        return new Point(this.x + vecteur.x, this.y + vecteur.y);\r\n    }\r\n    rotation(centre: Point, angle: number) {\r\n        let dx = this.x - centre.x;\r\n        let dy = this.y - centre.y;\r\n      \r\n        let rotatedX = centre.x + dx * Math.cos(angle) - dy * Math.sin(angle);\r\n        let rotatedY = centre.y + dx * Math.sin(angle) + dy * Math.cos(angle);\r\n      \r\n        return new Point(rotatedX, rotatedY);\r\n    }\r\n    symetrieCentrale(point: Point) {\r\n        return new Point(2 * point.x - this.x, 2 * point.y - this.y);\r\n    }\r\n    symetrieAxiale(d: Droite) {\r\n        let x = (d.b * (d.b * this.x - d.a * this.y) - d.a * d.c) / (d.a * d.a + d.b * d.b);\r\n        let y = (d.a * (-d.b * this.x + d.a * this.y) - d.b * d.c) / (d.a * d.a + d.b * d.b);\r\n        return new Point(2 * x - this.x, 2 * y - this.y);\r\n    }\r\n    distance(point: Point) {\r\n        return Math.sqrt(Math.pow(this.x - point.x, 2) + Math.pow(this.y - point.y, 2));\r\n    }\r\n    homothetie(centre: Point,k: number) {\r\n        return new Point(centre.x + k * (this.x - centre.x), centre.y + k * (this.y - centre.y));\r\n    }\r\n    homothetiePoint(centre: Point, point: Point) {\r\n        let k = centre.distance(point) / centre.distance(this);\r\n        return this.homothetie(centre, k);\r\n    }\r\n    angle(point1: Point, point2: Point) {\r\n        // Retourne l'angle orienté entre les vecteurs (this, point1) et (this, point2)\r\n        let vecteur1 = new Vecteur(point1.x - this.x, point1.y - this.y);\r\n        let vecteur2 = new Vecteur(point2.x - this.x, point2.y - this.y);\r\n        return vecteur1.angle(vecteur2);\r\n    }\r\n    distancePointDroite(A: Point, B: Point) {\r\n        return (B.x - A.x)*(this.y - A.y) - (B.y - A.y)*(this.x - A.x);\r\n    }\r\n    projectionOrthogonale(A: Point, B: Point) {\r\n        // Projection de this sur la droite (AB)\r\n        let AB = new Vecteur(B.x-A.x,B.y-A.y);\r\n        let AC = new Vecteur(this.x-A.x,this.y-A.y);\r\n        let k = AB.produitScalaire(AC)/(AB.norme()*AB.norme());\r\n        return new Point(A.x+k*AB.x, A.y+k*AB.y);\r\n    }\r\n    projectionAngle(A: Point, B: Point, angle: number) {\r\n        let AB = new Droite(0,0,0)\r\n        AB.setCoefficientsDroite2Points(A,B);\r\n        let u = new Vecteur(0,0)\r\n        u.setCoordonneesVecteur2Points(A,B)\r\n        let v = u.rotation(angle);\r\n        let C = this.translation(v)\r\n        let AC = new Droite(0,0,0)\r\n        AC.setCoefficientsDroite2Points(this,C)\r\n        return AB.intersection(AC)\r\n    }\r\n}\r\nexport class Vecteur {\r\n    x: number;\r\n    y: number;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    setCoordonneesVecteur(vecteur: Vecteur, x: number, y: number) {\r\n        vecteur.x = x;\r\n        vecteur.y = y;\r\n    }\r\n    // Méthode pour construire le vecteur à partir de deux points\r\n    setCoordonneesVecteur2Points(point1: Point, point2: Point) {\r\n        this.x = point2.x - point1.x;\r\n        this.y = point2.y - point1.y;\r\n    }\r\n    getCoordonneesVecteur() {\r\n        return [this.x, this.y];\r\n    }\r\n    additionVecteur(vecteur: Vecteur) {\r\n        return new Vecteur(this.x + vecteur.x, this.y + vecteur.y);\r\n    }\r\n    soustractionVecteur(vecteur: Vecteur) {\r\n        return new Vecteur(this.x - vecteur.x, this.y - vecteur.y);\r\n    }\r\n    multiplicationVecteur(k: number) {\r\n        return new Vecteur(k * this.x, k * this.y);\r\n    }\r\n    produitScalaire(vecteur: Vecteur) {\r\n        return this.x * vecteur.x + this.y * vecteur.y;\r\n    }\r\n    norme() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n    normalisation() {\r\n        return new Vecteur(this.x / this.norme(), this.y / this.norme());\r\n    }\r\n    produitVectoriel(vecteur: Vecteur) {\r\n        return this.x * vecteur.y - this.y * vecteur.x;\r\n    }\r\n    angle(vecteur: Vecteur) {\r\n        // Prévoir un angle signé\r\n        return Math.atan2(this.produitVectoriel(vecteur), this.produitScalaire(vecteur));\r\n    }\r\n    projection(vecteur: Vecteur) {\r\n        return this.produitScalaire(vecteur) / this.norme();\r\n    }\r\n    projectionOrthogonale(vecteur: Vecteur) {\r\n        return this.produitVectoriel(vecteur) / this.norme();\r\n    }\r\n    rotation(angle: number) {\r\n        return new Vecteur(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\r\n    }\r\n    oppose() {\r\n        return new Vecteur(-this.x, -this.y);\r\n    }\r\n}\r\nexport class Cercle {\r\n    centre: Point;\r\n    rayon: number;\r\n    constructor(centre: Point, rayon: number) {\r\n        this.centre = centre;\r\n        this.rayon = rayon;\r\n    }\r\n    setCoordonneesCercle(centre: Point, rayon: number) {\r\n        this.centre = centre;\r\n        this.rayon = rayon;\r\n    }\r\n    getCoordonneesCercle() {\r\n        return [this.centre, this.rayon];\r\n    }\r\n    symetrieCentrale(centre: Point) {\r\n        return new Cercle(new Point(2 * centre.x - this.centre.x, 2 * centre.y - this.centre.y), this.rayon);\r\n    }\r\n    symetrieAxiale(droite: Droite) {\r\n        let x = (droite.b * (droite.b * this.centre.x - droite.a * this.centre.y) - droite.a * droite.c) / (droite.a * droite.a + droite.b * droite.b);\r\n        let y = (droite.a * (-droite.b * this.centre.x + droite.a * this.centre.y) - droite.b * droite.c) / (droite.a * droite.a + droite.b * droite.b);\r\n        return new Cercle(new Point(2 * x - this.centre.x, 2 * y - this.centre.y), this.rayon);\r\n    }\r\n    rotation(angle: number, centre: Point) {\r\n        return new Cercle(new Point((this.centre.x-centre.x) * Math.cos(angle) - (this.centre.y-centre.y) * Math.sin(angle)+centre.x, (this.centre.x-centre.x) * Math.sin(angle) + (this.centre.y-centre.y) * Math.cos(angle)+centre.y), this.rayon);\r\n    }\r\n    homothetie(centre: Point,k: number) {\r\n        return new Cercle(new Point(centre.x + k * (this.centre.x - centre.x), centre.y + k * (this.centre.y - centre.y)), k * this.rayon);\r\n    }\r\n    translation(vecteur: Vecteur) {\r\n        return new Cercle(new Point(this.centre.x + vecteur.x, this.centre.y + vecteur.y), this.rayon);\r\n    }\r\n}\r\nexport class Droite {\r\n    a: number;\r\n    b: number;\r\n    c: number;\r\n    constructor(a: number, b: number, c: number) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n    }\r\n    setCoefficientsDroite(a: number, b: number, c: number) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n    }\r\n    getCoefficientsDroite() {\r\n        return [this.a, this.b, this.c];\r\n    }\r\n    getVecteurDirecteur() {\r\n        return new Vecteur(this.a, this.b);\r\n    }\r\n    getVecteurNormal() {\r\n        return new Vecteur(-this.b, this.a);\r\n    }\r\n    getVecteurNormalUnitaire() {\r\n        return new Vecteur(-this.b / Math.sqrt(this.a * this.a + this.b * this.b), this.a / Math.sqrt(this.a * this.a + this.b * this.b));\r\n    }\r\n    setCoefficientsDroite2Points(point1: Point, point2: Point) {\r\n        this.a = point2.y - point1.y;\r\n        this.b = point1.x - point2.x;\r\n        this.c = point1.y * point2.x - point1.x * point2.y;\r\n    }\r\n    translation(vecteur: Vecteur) {\r\n        return new Droite(this.a, this.b, this.c + this.a * vecteur.x + this.b * vecteur.y);\r\n    }\r\n    rotation(angle: number, centre: Point) {\r\n        return new Droite(this.a * Math.cos(angle) - this.b * Math.sin(angle), this.a * Math.sin(angle) + this.b * Math.cos(angle), this.c + this.a * (centre.y - centre.x * Math.sin(angle)) + this.b * (centre.x * Math.cos(angle) - centre.y));\r\n    }\r\n    symetrieCentrale(centre: Point) {\r\n        return new Droite(this.a, this.b, this.c + 2 * this.a * centre.x + 2 * this.b * centre.y);\r\n    }\r\n    symetrieAxiale(d: Droite) {\r\n        // Choisissons deux points sur la droite this\r\n        let x1 = 0;\r\n        let y1 = (-this.c - this.a * x1) / this.b;\r\n\r\n        let x2 = 1;\r\n        let y2 = (-this.c - this.a * x2) / this.b;\r\n\r\n        // Trouvons leurs symétriques par rapport à d\r\n        let x1Prime = x1 - 2 * d.a * (d.a * x1 + d.b * y1 + d.c) / (d.a**2 + d.b**2);\r\n        let y1Prime = y1 - 2 * d.b * (d.a * x1 + d.b * y1 + d.c) / (d.a**2 + d.b**2);\r\n\r\n        let x2Prime = x2 - 2 * d.a * (d.a * x2 + d.b * y2 + d.c) / (d.a**2 + d.b**2);\r\n        let y2Prime = y2 - 2 * d.b * (d.a * x2 + d.b * y2 + d.c) / (d.a**2 + d.b**2);\r\n\r\n        // Trouvons l'équation de la droite passant par P1' et P2'\r\n        let aPrime = y2Prime - y1Prime;\r\n        let bPrime = x1Prime - x2Prime;\r\n        let cPrime = x2Prime * y1Prime - x1Prime * y2Prime;\r\n\r\n        return new Droite(aPrime, bPrime, cPrime);\r\n    }\r\n    homothetie(centre: Point,k: number) {\r\n        return new Droite(this.a, this.b, this.c + this.a * (centre.x - k * centre.x) + this.b * (centre.y - k * centre.y));\r\n    }\r\n    perpendiculaire(point: Point) {\r\n        return new Droite(-this.b, this.a, this.b * point.x - this.a * point.y);\r\n    }\r\n    parallele(point: Point) {\r\n        return new Droite(this.a, this.b, this.c - this.a * point.x + this.b * point.y);\r\n    }\r\n    intersection(droite: Droite) {\r\n        let x = (this.b * droite.c - droite.b * this.c) / (this.a * droite.b - droite.a * this.b);\r\n        let y = (this.c * droite.a - droite.c * this.a) / (this.a * droite.b - droite.a * this.b);\r\n        return new Point(x, y);\r\n    }\r\n}\r\nexport class Points {\r\n    points: Point[];\r\n    constructor(points: Point[]) {\r\n        this.points = points;\r\n    }\r\n    setCoordonneesPoints(points: Point[]) {\r\n        this.points = points;\r\n    }\r\n    getCoordonneesPoints() {\r\n        return this.points;\r\n    }\r\n    rotation(angle: number, centre: Point) {\r\n        let points = [];\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            points.push(new Point((this.points[i].x-centre.x) * Math.cos(angle) - (this.points[i].y-centre.y) * Math.sin(angle)+centre.x, (this.points[i].x-centre.x) * Math.sin(angle) + (this.points[i].y-centre.y) * Math.cos(angle)+centre.y));\r\n        }\r\n        return new Points(points);\r\n    }\r\n    symetriecentrale(centre: Point) {\r\n        let points = [];\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            points.push(new Point(2 * centre.x - this.points[i].x, 2 * centre.y - this.points[i].y));\r\n        }\r\n        return new Points(points);\r\n    }\r\n    symetrieaxiale(droite: Droite) {\r\n        let points = [];\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            let x = (droite.b * (droite.b * this.points[i].x - droite.a * this.points[i].y) - droite.a * droite.c) / (droite.a * droite.a + droite.b * droite.b);\r\n            let y = (droite.a * (-droite.b * this.points[i].x + droite.a * this.points[i].y) - droite.b * droite.c) / (droite.a * droite.a + droite.b * droite.b);\r\n            points.push(new Point(2 * x - this.points[i].x, 2 * y - this.points[i].y));\r\n        }\r\n        return new Points(points);\r\n    }\r\n    homothetie(centre: Point,k: number) {\r\n        let points = [];\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            points.push(new Point(centre.x + k * (this.points[i].x - centre.x), centre.y + k * (this.points[i].y - centre.y)));\r\n        }\r\n        return new Points(points);\r\n    }\r\n    translation(vecteur: Vecteur) {\r\n        let points = [];\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            points.push(new Point(this.points[i].x + vecteur.x, this.points[i].y + vecteur.y));\r\n        }\r\n        return new Points(points);\r\n    }\r\n}\r\nexport class Segment {\r\n    point1: Point;\r\n    point2: Point;\r\n    constructor(point1: Point, point2: Point) {\r\n        this.point1 = point1;\r\n        this.point2 = point2;\r\n    }\r\n    setCoordonneesSegment(point1: Point, point2: Point) {\r\n        this.point1 = point1;\r\n        this.point2 = point2;\r\n    }\r\n    getCoordonneesSegment() {\r\n        return [this.point1, this.point2];\r\n    }\r\n    translation(vecteur: Vecteur) {\r\n        return new Segment(new Point(this.point1.x + vecteur.x, this.point1.y + vecteur.y), new Point(this.point2.x + vecteur.x, this.point2.y + vecteur.y));\r\n    }\r\n    rotation(angle: number, centre: Point) {\r\n        return new Segment(new Point((this.point1.x-centre.x) * Math.cos(angle) - (this.point1.y-centre.y) * Math.sin(angle)+centre.x, (this.point1.x-centre.x) * Math.sin(angle) + (this.point1.y-centre.y) * Math.cos(angle)+centre.y), new Point((this.point2.x-centre.x) * Math.cos(angle) - (this.point2.y-centre.y) * Math.sin(angle)+centre.x, (this.point2.x-centre.x) * Math.sin(angle) + (this.point2.y-centre.y) * Math.cos(angle)+centre.y));\r\n    }\r\n    symetrieCentrale(centre: Point) {\r\n        return new Segment(new Point(2 * centre.x - this.point1.x, 2 * centre.y - this.point1.y), new Point(2 * centre.x - this.point2.x, 2 * centre.y - this.point2.y));\r\n    }\r\n    symetrieAxiale(droite: Droite) {\r\n        let x1 = (droite.b * (droite.b * this.point1.x - droite.a * this.point1.y) - droite.a * droite.c) / (droite.a * droite.a + droite.b * droite.b);\r\n        let y1 = (droite.a * (-droite.b * this.point1.x + droite.a * this.point1.y) - droite.b * droite.c) / (droite.a * droite.a + droite.b * droite.b);\r\n        let x2 = (droite.b * (droite.b * this.point2.x - droite.a * this.point2.y) - droite.a * droite.c) / (droite.a * droite.a + droite.b * droite.b);\r\n        let y2 = (droite.a * (-droite.b * this.point2.x + droite.a * this.point2.y) - droite.b * droite.c) / (droite.a * droite.a + droite.b * droite.b);\r\n        return new Segment(new Point(2 * x1 - this.point1.x, 2 * y1 - this.point1.y), new Point(2 * x2 - this.point2.x, 2 * y2 - this.point2.y));\r\n    }\r\n    homothetie(centre: Point,k: number) {\r\n        return new Segment(new Point(centre.x + k * (this.point1.x - centre.x), centre.y + k * (this.point1.y - centre.y)), new Point(centre.x + k * (this.point2.x - centre.x), centre.y + k * (this.point2.y - centre.y)));\r\n    }\r\n    perpendiculaire(point: Point) {\r\n        let droite = new Droite(0,0,0);\r\n        droite.setCoefficientsDroite2Points(this.point1,this.point2);\r\n        return droite.perpendiculaire(point);\r\n    }\r\n    parallele(point: Point) {\r\n        let droite = new Droite(0,0,0);\r\n        droite.setCoefficientsDroite2Points(this.point1,this.point2);\r\n        return droite.parallele(point);\r\n    }\r\n    milieu() {\r\n        return new Point((this.point1.x + this.point2.x) / 2, (this.point1.y + this.point2.y) / 2);\r\n    }\r\n    longueur() {\r\n        return Math.sqrt(Math.pow(this.point1.x - this.point2.x, 2) + Math.pow(this.point1.y - this.point2.y, 2));\r\n    }\r\n    angle() {\r\n        // Retourne l'angle orienté entre le segment et l'axe des abscisses\r\n        let vecteur = new Vecteur(this.point2.x - this.point1.x, this.point2.y - this.point1.y);\r\n        return vecteur.angle(new Vecteur(1, 0));\r\n    }\r\n}\r\n\r\n(window as any).Point = Point;\r\n(window as any).Vecteur = Vecteur;\r\n(window as any).Cercle = Cercle;\r\n(window as any).Droite = Droite;\r\n(window as any).Points = Points;\r\n(window as any).Segment = Segment;\r\n"],"names":[],"sourceRoot":""}